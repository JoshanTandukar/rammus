<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.peeqlive">
  <uses-permission android:name="android.permission.INTERNET"/>
  <uses-permission android:name="android.permission.CAMERA" />
  <uses-feature android:name="android.hardware.camera" />
  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
  <uses-permission android:name="android.permission.WAKE_LOCK" />
  <uses-permission android:name="android.permission.READ_PHONE_STATE" />
  <uses-permission android:name="android.permission.GET_ACCOUNTS" />
  <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
  <uses-permission android:name="android.permission.VIBRATE" />
  <uses-permission android:name="android.permission.REORDER_TASKS" />
  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
  <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
  <uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY"/>
  <uses-permission android:name="android.permission.RECORD_AUDIO" />
  <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
  <uses-permission android:name="android.permission.SCHEDULE_EXACT_ALARM"/>
  <uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY"/>
  <!-- The Agora SDK requires Bluetooth permissions in case users are using Bluetooth devices.-->
  <uses-permission android:name="android.permission.BLUETOOTH" />
  <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT" />
  <application
      android:name=".MyApplication"
      android:label="@string/app_name"
      android:icon="@mipmap/ic_launcher"
      android:allowBackup="false"
      android:fullBackupContent="false"
      android:hardwareAccelerated="true"
      android:requestLegacyExternalStorage="true"
      android:launchMode="singleTop"
      tools:replace="android:allowBackup"
      android:usesCleartextTraffic="true">
    <activity
        android:name=".MainActivity"
        android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
        android:launchMode="singleTop"
        android:screenOrientation="portrait"
        android:theme="@style/LaunchTheme"
        android:windowSoftInputMode="adjustResize"
        android:showWhenLocked="true"
        android:turnScreenOn="true"
        android:hardwareAccelerated="true"
        android:exported="true">
      <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
      <meta-data android:name="io.flutter.embedding.android.NormalTheme" android:resource="@style/NormalTheme"/>
      <!-- Displays an Android View that continues showing the launch screen
                 Drawable until Flutter paints its first frame, then this splash
                 screen fades out. A splash screen is useful to avoid any visual
                 gap between the end of Android's launch screen and the painting of
                 Flutter's first frame. -->
      <meta-data android:name="io.flutter.embedding.android.SplashScreenDrawable" android:resource="@drawable/launch_background"/>
      <intent-filter>
        <action android:name="android.intent.action.MAIN"/>
        <category android:name="android.intent.category.LAUNCHER"/>
      </intent-filter>

      <meta-data
          android:name="com.alibaba.app.appkey"
          android:value="333585763" /> <!-- 请填写你自己的- appKey -->
      <meta-data
          android:name="com.alibaba.app.appsecret"
          android:value="15a64b6703194b39af06a8da00de344d" />
      <meta-data
          android:name="com.huawei.hms.client.appid"
          android:value="333585763" />
      <meta-data
          android:name="com.xiaomi.push.client.app_id"
          android:value="333585763"/>
      <meta-data
          android:name="com.xiaomi.push.client.app_key"
          android:value="15a64b6703194b39af06a8da00de344d" />
      <meta-data
          android:name="com.oppo.push.client.app_key"
          android:value="333585763" />
      <meta-data
          android:name="com.oppo.push.client.app_secret"
          android:value="15a64b6703194b39af06a8da00de344d" />
      <meta-data
          android:name="com.meizu.push.client.app_id"
          android:value="333585763" />
      <meta-data
          android:name="com.meizu.push.client.app_key"
          android:value="15a64b6703194b39af06a8da00de344d" />
      <meta-data
          android:name="com.vivo.push.app_id"
          android:value="333585763" />
      <meta-data
          android:name="com.vivo.push.api_key"
          android:value="15a64b6703194b39af06a8da00de344d" />
      <meta-data
          android:name="com.gcm.push.send_id"
          android:value="493137525978" />
      <meta-data
          android:name="com.gcm.push.app_id"
          android:value="1:493137525978:android:2fd17d239633d21e2db9e3" />
      <!-- 华为 -->
    </activity>
    <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
    <meta-data android:name="flutterEmbedding" android:value="2"/>
    <service android:name=".RammusPushIntentService"
        android:exported="false">
      <intent-filter>
        <action android:name="com.alibaba.push2.action.NOTIFICATION_OPENED" />
      </intent-filter>
      <intent-filter>
        <action android:name="com.alibaba.push2.action.NOTIFICATION_REMOVED" />
      </intent-filter>
      <intent-filter>
        <action android:name="com.alibaba.sdk.android.push.RECEIVE" />
      </intent-filter>
    </service>
  </application>
</manifest>